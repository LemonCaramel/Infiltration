package moe.caramel.infiltration.authlib;

import com.mojang.authlib.minecraft.client.MinecraftClient;
import moe.caramel.infiltration.Util;
import java.net.Proxy;
import java.net.URL;

/**
 * ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⣤⣴⠶⠶⠟⠛⠛⠛⠛⠛⠛⠛⠛⠻⠶⠶⣦⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠀⠀⠀⢀⣰⡜⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢳⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠀⠀⢀⣾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠀⠀⣿⠉⠀⠀⠀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⠀⠀⠀⠉⣿⠀⠀⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠀⠀⣿⠀⢀⣰⣶⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⣶⣿⡿⠉⠉⠿⣷⣆⡀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠀⠀⣿⡀⢸⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⣿⣯⡀⠘⠃⠀⣽⣿⡇⢀⣿⠀⠀⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠀⠀⠀⢿⡀⠘⠛⠿⠿⠿⣿⢿⠀⢀⣿⣿⣀⠀⠿⣿⠶⡶⢿⠟⠓⢀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠀⠀⠀⣼⠇⠀⠀⣤⠸⠿⠏⠀⠀⢸⣿⣿⣿⠀⠀⠙⠿⠇⣤⡀⠀⠸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠰⠶⣿⢳⡶⣆⣀⣀⣀⣀⣀⣀⣀⣀⣀⣰⣶⣿⡿⠖⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⢀⠀⠀⢹⡆⠀⠀⠹⢾⣧⡍⢙⣿⠉⣿⠉⠉⣿⠋⢹⣿⡼⠏⠁⠀⢰⣯⣤⣤⡄⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⢠⣞⣛⣛⠛⠛⢳⣄⣀⠀⠀⠛⠻⣿⣶⣿⣶⣶⣿⣶⠛⠛⠀⣀⣠⡾⠋⠀⣠⡿⢛⣷⠀⠀⠀⠀⠀
 * ⠀⠀⠀⣤⡾⠉⠉⠿⠷⢦⡄⠉⠹⠶⠶⣦⣤⣤⣤⣤⣤⣤⣤⣤⣴⠶⠶⠏⠉⠀⢠⡶⠋⠀⠈⣷⠀⠀⠀⠀⠀
 * ⠀⠀⣛⣧⠄⠀⠀⣀⠀⠀⠙⠻⣤⣀⣀⣈⣿⣘⠛⠛⠛⢛⣿⣇⣀⣀⣀⣤⣼⣿⠋⠀⣠⡄⠀⠈⠻⣤⡀⠀⠀
 * ⢀⣰⠏⠁⠀⠀⠀⣿⠀⠀⠀⠀⢸⡏⠉⣿⣿⣿⣆⣀⣀⣸⣿⣿⢿⣿⠉⠁⠀⠀⠀⠀⣿⠀⠀⠀⠀⠸⢇⡀⠀
 * ⣼⠟⠀⠀⠀⠀⠀⣿⣀⢀⣀⣀⣸⣷⣤⣿⣿⣿⠉⠉⠙⢻⣿⣿⣾⣿⠀⠀⢀⣀⣠⣿⣿⠀⠀⠀⠀⠀⠈⣿⠀
 * ⣿⠀⠀⠀⠀⠀⠀⣿⡿⠞⠉⠉⠉⢱⡆⣙⣿⣿⠀⠀⠀⢸⣿⣏⣸⣿⢀⡶⠾⠿⠉⠁⣿⡀⠀⠀⠀⠀⠀⠙⣶
 * ⢻⣄⠀⠀⠀⠀⢸⡏⠀⠀⠀⠀⠀⢸⡟⢋⣿⣿⠀⠀⠀⢸⣿⡋⢹⣿⣸⡇⠀⠀⠀⠀⢹⡇⠀⠀⠀⠀⠀⢀⣿
 * ⠀⠘⠷⣄⣀⠀⢸⡇⠀⠀⠀⠀⠀⠘⢳⡟⣿⣿⠀⠀⠀⢸⣿⠛⣿⣸⠇⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⢀⡴⠟⠀
 * ⠀⠀⠀⠉⣿⡀⢸⣧⣤⠀⠀⠀⠀⠀⢸⣧⣿⣿⣿⣿⣿⣿⣿⣤⣿⠉⠀⠀⠀⠀⠀⣤⣿⣇⣠⣤⣴⠟⠁⠀⠀
 * ⠀⠀⠀⠀⠘⠛⠛⣿⣿⣷⣶⣶⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠘⠃⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠀⠀⣭⣿⣿⡿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⣿⣿⣿⣿⡏⣿⠀⠀⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠀⢸⡏⣿⡟⠃⣶⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⢸⡇⠀⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠀⢸⡇⣿⡇⠀⣿⣿⣿⣿⣿⣿⣿⡇⣿⢸⣿⣿⣿⣿⣿⠀⠉⣿⣿⣿⣿⣼⢧⡄⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⢸⡇⣿⣿⠀⢸⣿⣿⣿⣿⣿⣿⣿⢃⣿⣿⢸⣿⣿⣿⣿⡀⠀⣿⣿⣿⣿⣿⢸⡇⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⢸⡇⣿⣿⠀⢸⣿⣿⣿⣿⣿⣿⣿⢸⡇⣿⢸⣿⣿⣿⣿⡇⠀⣿⣿⣿⣿⣿⢸⡇⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⠀⠘⢳⣽⣯⣴⣞⣛⣛⣛⣛⣛⣛⣻⡞⠃⠻⣾⣛⣛⣛⣛⣃⣀⣙⣛⣻⣿⣿⡜⠃⠀⠀⠀⠀⠀⠀
 * ⠀⠀⠀⠀⢠⣰⠶⠶⢶⣀⡼⠿⠿⢿⡉⠉⠉⠉⠀⠀⠀⠈⠉⠉⣿⠻⠿⠿⠿⠿⣇⣀⣰⠶⠶⣆⣀⠀⠀⠀⠀
 * ⠀⠀⠀⣤⠟⠁⠀⠀⠈⠉⠙⣧⠀⣸⡇⠀⠀⠀⠀⠀⠀⠀⠀⣿⡉⠀⢀⣤⣠⣾⢿⣏⣭⣤⣤⣭⣽⣿⣄⡀⠀
 * ⠀⠀⠀⠿⣤⣤⣤⣤⣤⣤⣤⣿⢿⣿⡷⠆⠀⠀⠀⠀⠀⠀⠶⣿⣿⣿⣿⣿⣿⣭⣬⣭⣭⣥⣬⣭⣽⠿⠋⠁⠀
 * ⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀
 */
public final class SansClient extends MinecraftClient {

    public SansClient(final String accessToken, final Proxy proxy) {
        super(accessToken, proxy);
    }

    @Override
    public <T> T get(URL url, Class<T> responseClass) {
        return Util.loop(() -> super.get(url, responseClass));
    }

    @Override
    public <T> T post(URL url, Class<T> responseClass) {
        return Util.loop(() -> super.post(url, responseClass));
    }

    @Override
    public <T> T post(URL url, Object body, Class<T> responseClass) {
        return Util.loop(() -> super.post(url, body, responseClass));
    }
}
